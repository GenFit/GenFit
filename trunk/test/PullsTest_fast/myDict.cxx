//
// File generated by /home/phil/phys/root/bin/rootcint at Tue Oct 30 01:36:56 2012

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIphildIphysdIgenfit_moddItrunkdItestdIPullsTest_fastdImyDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "myDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void PointHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PointHit(void *p = 0);
   static void *newArray_PointHit(Long_t size, void *p);
   static void delete_PointHit(void *p);
   static void deleteArray_PointHit(void *p);
   static void destruct_PointHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::PointHit*)
   {
      ::PointHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PointHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PointHit", ::PointHit::Class_Version(), "./PointHit.h", 15,
                  typeid(::PointHit), DefineBehavior(ptr, ptr),
                  &::PointHit::Dictionary, isa_proxy, 4,
                  sizeof(::PointHit) );
      instance.SetNew(&new_PointHit);
      instance.SetNewArray(&newArray_PointHit);
      instance.SetDelete(&delete_PointHit);
      instance.SetDeleteArray(&deleteArray_PointHit);
      instance.SetDestructor(&destruct_PointHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::PointHit*)
   {
      return GenerateInitInstanceLocal((::PointHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PointHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void PixHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PixHit(void *p = 0);
   static void *newArray_PixHit(Long_t size, void *p);
   static void delete_PixHit(void *p);
   static void deleteArray_PixHit(void *p);
   static void destruct_PixHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::PixHit*)
   {
      ::PixHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PixHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PixHit", ::PixHit::Class_Version(), "./PixHit.h", 17,
                  typeid(::PixHit), DefineBehavior(ptr, ptr),
                  &::PixHit::Dictionary, isa_proxy, 4,
                  sizeof(::PixHit) );
      instance.SetNew(&new_PixHit);
      instance.SetNewArray(&newArray_PixHit);
      instance.SetDelete(&delete_PixHit);
      instance.SetDeleteArray(&deleteArray_PixHit);
      instance.SetDestructor(&destruct_PixHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::PixHit*)
   {
      return GenerateInitInstanceLocal((::PixHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PixHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StripHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StripHit(void *p = 0);
   static void *newArray_StripHit(Long_t size, void *p);
   static void delete_StripHit(void *p);
   static void deleteArray_StripHit(void *p);
   static void destruct_StripHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StripHit*)
   {
      ::StripHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StripHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StripHit", ::StripHit::Class_Version(), "./StripHit.h", 17,
                  typeid(::StripHit), DefineBehavior(ptr, ptr),
                  &::StripHit::Dictionary, isa_proxy, 4,
                  sizeof(::StripHit) );
      instance.SetNew(&new_StripHit);
      instance.SetNewArray(&newArray_StripHit);
      instance.SetDelete(&delete_StripHit);
      instance.SetDeleteArray(&deleteArray_StripHit);
      instance.SetDestructor(&destruct_StripHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StripHit*)
   {
      return GenerateInitInstanceLocal((::StripHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StripHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void GenfitDisplay_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_GenfitDisplay(void *p);
   static void deleteArray_GenfitDisplay(void *p);
   static void destruct_GenfitDisplay(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GenfitDisplay*)
   {
      ::GenfitDisplay *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GenfitDisplay >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GenfitDisplay", ::GenfitDisplay::Class_Version(), "/home/phil/phys/genfit_mod/trunk/eventDisplay/GenfitDisplay.h", 45,
                  typeid(::GenfitDisplay), DefineBehavior(ptr, ptr),
                  &::GenfitDisplay::Dictionary, isa_proxy, 4,
                  sizeof(::GenfitDisplay) );
      instance.SetDelete(&delete_GenfitDisplay);
      instance.SetDeleteArray(&deleteArray_GenfitDisplay);
      instance.SetDestructor(&destruct_GenfitDisplay);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GenfitDisplay*)
   {
      return GenerateInitInstanceLocal((::GenfitDisplay*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GenfitDisplay*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *PointHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *PointHit::Class_Name()
{
   return "PointHit";
}

//______________________________________________________________________________
const char *PointHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PointHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PointHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PointHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PointHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PointHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PointHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PointHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *PixHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *PixHit::Class_Name()
{
   return "PixHit";
}

//______________________________________________________________________________
const char *PixHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PixHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PixHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PixHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PixHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PixHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PixHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PixHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StripHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StripHit::Class_Name()
{
   return "StripHit";
}

//______________________________________________________________________________
const char *StripHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StripHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StripHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StripHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StripHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StripHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StripHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StripHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *GenfitDisplay::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GenfitDisplay::Class_Name()
{
   return "GenfitDisplay";
}

//______________________________________________________________________________
const char *GenfitDisplay::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GenfitDisplay*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GenfitDisplay::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GenfitDisplay*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GenfitDisplay::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GenfitDisplay*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GenfitDisplay::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GenfitDisplay*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void PointHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class PointHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PointHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(PointHit::Class(),this);
   }
}

//______________________________________________________________________________
void PointHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PointHit.
      TClass *R__cl = ::PointHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      GFRecoHitIfc<GFSpacepointHitPolicy>::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_PointHit(void *p) {
      return  p ? new(p) ::PointHit : new ::PointHit;
   }
   static void *newArray_PointHit(Long_t nElements, void *p) {
      return p ? new(p) ::PointHit[nElements] : new ::PointHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_PointHit(void *p) {
      delete ((::PointHit*)p);
   }
   static void deleteArray_PointHit(void *p) {
      delete [] ((::PointHit*)p);
   }
   static void destruct_PointHit(void *p) {
      typedef ::PointHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::PointHit

//______________________________________________________________________________
void PixHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class PixHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PixHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(PixHit::Class(),this);
   }
}

//______________________________________________________________________________
void PixHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PixHit.
      TClass *R__cl = ::PixHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      GFRecoHitIfc<GFPlanarHitPolicy>::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_PixHit(void *p) {
      return  p ? new(p) ::PixHit : new ::PixHit;
   }
   static void *newArray_PixHit(Long_t nElements, void *p) {
      return p ? new(p) ::PixHit[nElements] : new ::PixHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_PixHit(void *p) {
      delete ((::PixHit*)p);
   }
   static void deleteArray_PixHit(void *p) {
      delete [] ((::PixHit*)p);
   }
   static void destruct_PixHit(void *p) {
      typedef ::PixHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::PixHit

//______________________________________________________________________________
void StripHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class StripHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StripHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(StripHit::Class(),this);
   }
}

//______________________________________________________________________________
void StripHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StripHit.
      TClass *R__cl = ::StripHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      GFRecoHitIfc<GFPlanarHitPolicy>::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StripHit(void *p) {
      return  p ? new(p) ::StripHit : new ::StripHit;
   }
   static void *newArray_StripHit(Long_t nElements, void *p) {
      return p ? new(p) ::StripHit[nElements] : new ::StripHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_StripHit(void *p) {
      delete ((::StripHit*)p);
   }
   static void deleteArray_StripHit(void *p) {
      delete [] ((::StripHit*)p);
   }
   static void destruct_StripHit(void *p) {
      typedef ::StripHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StripHit

//______________________________________________________________________________
void GenfitDisplay::Streamer(TBuffer &R__b)
{
   // Stream an object of class GenfitDisplay.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GenfitDisplay::Class(),this);
   } else {
      R__b.WriteClassBuffer(GenfitDisplay::Class(),this);
   }
}

//______________________________________________________________________________
void GenfitDisplay::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GenfitDisplay.
      TClass *R__cl = ::GenfitDisplay::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventId", &fEventId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fErrorScale", &fErrorScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOption", (void*)&fOption);
      R__insp.InspectMember("string", (void*)&fOption, "fOption.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvents", (void*)&fEvents);
      R__insp.InspectMember("vector<std::vector<GFTrack*>*>", (void*)&fEvents, "fEvents.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHits", (void*)&fHits);
      R__insp.InspectMember("vector<std::vector<std::vector<double> > >", (void*)&fHits, "fHits.", false);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_GenfitDisplay(void *p) {
      delete ((::GenfitDisplay*)p);
   }
   static void deleteArray_GenfitDisplay(void *p) {
      delete [] ((::GenfitDisplay*)p);
   }
   static void destruct_GenfitDisplay(void *p) {
      typedef ::GenfitDisplay current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GenfitDisplay

namespace ROOT {
   void vectorlEGFTrackmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEGFTrackmUgR_Dictionary();
   static void *new_vectorlEGFTrackmUgR(void *p = 0);
   static void *newArray_vectorlEGFTrackmUgR(Long_t size, void *p);
   static void delete_vectorlEGFTrackmUgR(void *p);
   static void deleteArray_vectorlEGFTrackmUgR(void *p);
   static void destruct_vectorlEGFTrackmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<GFTrack*>*)
   {
      vector<GFTrack*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<GFTrack*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<GFTrack*>", -2, "prec_stl/vector", 49,
                  typeid(vector<GFTrack*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEGFTrackmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<GFTrack*>) );
      instance.SetNew(&new_vectorlEGFTrackmUgR);
      instance.SetNewArray(&newArray_vectorlEGFTrackmUgR);
      instance.SetDelete(&delete_vectorlEGFTrackmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEGFTrackmUgR);
      instance.SetDestructor(&destruct_vectorlEGFTrackmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<GFTrack*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<GFTrack*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEGFTrackmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<GFTrack*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEGFTrackmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<GFTrack*> : new vector<GFTrack*>;
   }
   static void *newArray_vectorlEGFTrackmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<GFTrack*>[nElements] : new vector<GFTrack*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEGFTrackmUgR(void *p) {
      delete ((vector<GFTrack*>*)p);
   }
   static void deleteArray_vectorlEGFTrackmUgR(void *p) {
      delete [] ((vector<GFTrack*>*)p);
   }
   static void destruct_vectorlEGFTrackmUgR(void *p) {
      typedef vector<GFTrack*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<GFTrack*>

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEvectorlEGFTrackmUgRmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEGFTrackmUgRmUgR_Dictionary();
   static void *new_vectorlEvectorlEGFTrackmUgRmUgR(void *p = 0);
   static void *newArray_vectorlEvectorlEGFTrackmUgRmUgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEGFTrackmUgRmUgR(void *p);
   static void deleteArray_vectorlEvectorlEGFTrackmUgRmUgR(void *p);
   static void destruct_vectorlEvectorlEGFTrackmUgRmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<GFTrack*>*>*)
   {
      vector<vector<GFTrack*>*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<GFTrack*>*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<GFTrack*>*>", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<GFTrack*>*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEGFTrackmUgRmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<GFTrack*>*>) );
      instance.SetNew(&new_vectorlEvectorlEGFTrackmUgRmUgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEGFTrackmUgRmUgR);
      instance.SetDelete(&delete_vectorlEvectorlEGFTrackmUgRmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEGFTrackmUgRmUgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEGFTrackmUgRmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<GFTrack*>*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<GFTrack*>*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEGFTrackmUgRmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<GFTrack*>*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEGFTrackmUgRmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<GFTrack*>*> : new vector<vector<GFTrack*>*>;
   }
   static void *newArray_vectorlEvectorlEGFTrackmUgRmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<GFTrack*>*>[nElements] : new vector<vector<GFTrack*>*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEGFTrackmUgRmUgR(void *p) {
      delete ((vector<vector<GFTrack*>*>*)p);
   }
   static void deleteArray_vectorlEvectorlEGFTrackmUgRmUgR(void *p) {
      delete [] ((vector<vector<GFTrack*>*>*)p);
   }
   static void destruct_vectorlEvectorlEGFTrackmUgRmUgR(void *p) {
      typedef vector<vector<GFTrack*>*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<GFTrack*>*>

namespace ROOT {
   void vectorlEvectorlEdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEdoublegRsPgR_Dictionary();
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p);
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<double> >*)
   {
      vector<vector<double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<double> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<double> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEdoublegRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<double> >) );
      instance.SetNew(&new_vectorlEvectorlEdoublegRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEdoublegRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEdoublegRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<double> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> > : new vector<vector<double> >;
   }
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> >[nElements] : new vector<vector<double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete ((vector<vector<double> >*)p);
   }
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete [] ((vector<vector<double> >*)p);
   }
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p) {
      typedef vector<vector<double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<double> >

namespace ROOT {
   void vectorlEvectorlEvectorlEdoublegRsPgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEvectorlEdoublegRsPgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEvectorlEdoublegRsPgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEvectorlEdoublegRsPgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEvectorlEdoublegRsPgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEvectorlEdoublegRsPgRsPgR(void *p);
   static void destruct_vectorlEvectorlEvectorlEdoublegRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<vector<double> > >*)
   {
      vector<vector<vector<double> > > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<vector<double> > >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<vector<double> > >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<vector<double> > >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEvectorlEdoublegRsPgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<vector<double> > >) );
      instance.SetNew(&new_vectorlEvectorlEvectorlEdoublegRsPgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEvectorlEdoublegRsPgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEvectorlEdoublegRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEvectorlEdoublegRsPgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEvectorlEdoublegRsPgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<vector<double> > > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<vector<double> > >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEvectorlEdoublegRsPgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<vector<double> > >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEvectorlEdoublegRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<vector<double> > > : new vector<vector<vector<double> > >;
   }
   static void *newArray_vectorlEvectorlEvectorlEdoublegRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<vector<double> > >[nElements] : new vector<vector<vector<double> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEvectorlEdoublegRsPgRsPgR(void *p) {
      delete ((vector<vector<vector<double> > >*)p);
   }
   static void deleteArray_vectorlEvectorlEvectorlEdoublegRsPgRsPgR(void *p) {
      delete [] ((vector<vector<vector<double> > >*)p);
   }
   static void destruct_vectorlEvectorlEvectorlEdoublegRsPgRsPgR(void *p) {
      typedef vector<vector<vector<double> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<vector<double> > >

/********************************************************
* /home/phil/phys/genfit_mod/trunk/test/PullsTest_fast/myDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablemyDict();

extern "C" void G__set_cpp_environmentmyDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("PointHit.h");
  G__add_compiledheader("PixHit.h");
  G__add_compiledheader("StripHit.h");
  G__add_compiledheader("/home/phil/phys/genfit_mod/trunk/eventDisplay/GenfitDisplay.h");
  G__cpp_reset_tagtablemyDict();
}
#include <new>
extern "C" int G__cpp_dllrevmyDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* PointHit */
static int G__myDict_277_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PointHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PointHit[n];
     } else {
       p = new((void*) gvp) PointHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PointHit;
     } else {
       p = new((void*) gvp) PointHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__myDictLN_PointHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_277_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PointHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PointHit(*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) PointHit(*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__myDictLN_PointHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_277_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PointHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_277_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PointHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_277_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PointHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_277_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PointHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_277_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PointHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_277_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PointHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_277_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PointHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_277_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PointHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_277_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PointHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__myDict_277_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PointHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PointHit(*(PointHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__myDictLN_PointHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PointHit G__TPointHit;
static int G__myDict_277_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PointHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PointHit*) (soff+(sizeof(PointHit)*i)))->~G__TPointHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PointHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PointHit*) (soff))->~G__TPointHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__myDict_277_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PointHit* dest = (PointHit*) G__getstructoffset();
   *dest = *(PointHit*) libp->para[0].ref;
   const PointHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PixHit */
static int G__myDict_282_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PixHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PixHit[n];
     } else {
       p = new((void*) gvp) PixHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PixHit;
     } else {
       p = new((void*) gvp) PixHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__myDictLN_PixHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_282_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PixHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PixHit(
*((TVector3*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) PixHit(
*((TVector3*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__myDictLN_PixHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_282_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PixHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PixHit(*(GFDetPlane*) libp->para[0].ref, (double) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) PixHit(*(GFDetPlane*) libp->para[0].ref, (double) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__myDictLN_PixHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_282_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PixHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PixHit(
*(GFDetPlane*) libp->para[0].ref, (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) PixHit(
*(GFDetPlane*) libp->para[0].ref, (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__myDictLN_PixHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_282_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PixHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_282_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PixHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_282_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PixHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_282_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PixHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_282_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PixHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_282_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PixHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_282_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PixHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_282_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PixHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_282_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PixHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__myDict_282_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PixHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PixHit(*(PixHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__myDictLN_PixHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PixHit G__TPixHit;
static int G__myDict_282_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PixHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PixHit*) (soff+(sizeof(PixHit)*i)))->~G__TPixHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PixHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PixHit*) (soff))->~G__TPixHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__myDict_282_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PixHit* dest = (PixHit*) G__getstructoffset();
   *dest = *(PixHit*) libp->para[0].ref;
   const PixHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StripHit */
static int G__myDict_283_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StripHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StripHit[n];
     } else {
       p = new((void*) gvp) StripHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StripHit;
     } else {
       p = new((void*) gvp) StripHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__myDictLN_StripHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_283_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StripHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StripHit(
*((TVector3*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) StripHit(
*((TVector3*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__myDictLN_StripHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_283_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StripHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_283_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StripHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_283_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StripHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_283_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StripHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_283_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StripHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_283_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StripHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_283_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StripHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_283_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StripHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_283_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StripHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__myDict_283_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StripHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StripHit(*(StripHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__myDictLN_StripHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StripHit G__TStripHit;
static int G__myDict_283_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StripHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StripHit*) (soff+(sizeof(StripHit)*i)))->~G__TStripHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StripHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StripHit*) (soff))->~G__TStripHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__myDict_283_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StripHit* dest = (StripHit*) G__getstructoffset();
   *dest = *(StripHit*) libp->para[0].ref;
   const StripHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GenfitDisplay */
static int G__myDict_741_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GenfitDisplay::getInstance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_741_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GenfitDisplay*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_741_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GenfitDisplay*) G__getstructoffset())->addEvent(*(vector<GFTrack*>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_741_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((GenfitDisplay*) G__getstructoffset())->next((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((GenfitDisplay*) G__getstructoffset())->next();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_741_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((GenfitDisplay*) G__getstructoffset())->prev((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((GenfitDisplay*) G__getstructoffset())->prev();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_741_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GenfitDisplay*) G__getstructoffset())->gotoEvent((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_741_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GenfitDisplay*) G__getstructoffset())->getNEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_741_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((GenfitDisplay*) G__getstructoffset())->setOptions(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((GenfitDisplay*) G__getstructoffset())->setOptions();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_741_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((GenfitDisplay*) G__getstructoffset())->setErrScale((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((GenfitDisplay*) G__getstructoffset())->setErrScale();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_741_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GenfitDisplay*) G__getstructoffset())->getErrScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_741_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GenfitDisplay*) G__getstructoffset())->open();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_741_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GenfitDisplay*) G__getstructoffset())->addHits(*((vector<std::vector<double> >*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_741_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GenfitDisplay::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_741_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GenfitDisplay::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_741_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GenfitDisplay::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_741_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GenfitDisplay::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_741_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GenfitDisplay*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_741_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GenfitDisplay::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_741_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GenfitDisplay::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_741_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GenfitDisplay::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__myDict_741_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GenfitDisplay::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__myDict_741_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GenfitDisplay* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GenfitDisplay(*(GenfitDisplay*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__myDictLN_GenfitDisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GenfitDisplay G__TGenfitDisplay;
static int G__myDict_741_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GenfitDisplay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GenfitDisplay*) (soff+(sizeof(GenfitDisplay)*i)))->~G__TGenfitDisplay();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GenfitDisplay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GenfitDisplay*) (soff))->~G__TGenfitDisplay();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__myDict_741_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GenfitDisplay* dest = (GenfitDisplay*) G__getstructoffset();
   *dest = *(GenfitDisplay*) libp->para[0].ref;
   const GenfitDisplay& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* PointHit */

/* PixHit */

/* StripHit */

/* GenfitDisplay */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncmyDict {
 public:
  G__Sizep2memfuncmyDict(): p(&G__Sizep2memfuncmyDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncmyDict::*p)();
};

size_t G__get_sizep2memfuncmyDict()
{
  G__Sizep2memfuncmyDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancemyDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__myDictLN_PointHit))) {
     PointHit *G__Lderived;
     G__Lderived=(PointHit*)0x1000;
     {
       GFRecoHitIfc<GFSpacepointHitPolicy> *G__Lpbase=(GFRecoHitIfc<GFSpacepointHitPolicy>*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__myDictLN_PointHit),G__get_linked_tagnum(&G__myDictLN_GFRecoHitIfclEGFSpacepointHitPolicygR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       GFAbsRecoHit *G__Lpbase=(GFAbsRecoHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__myDictLN_PointHit),G__get_linked_tagnum(&G__myDictLN_GFAbsRecoHit),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__myDictLN_PointHit),G__get_linked_tagnum(&G__myDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__myDictLN_PixHit))) {
     PixHit *G__Lderived;
     G__Lderived=(PixHit*)0x1000;
     {
       GFRecoHitIfc<GFPlanarHitPolicy> *G__Lpbase=(GFRecoHitIfc<GFPlanarHitPolicy>*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__myDictLN_PixHit),G__get_linked_tagnum(&G__myDictLN_GFRecoHitIfclEGFPlanarHitPolicygR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       GFAbsRecoHit *G__Lpbase=(GFAbsRecoHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__myDictLN_PixHit),G__get_linked_tagnum(&G__myDictLN_GFAbsRecoHit),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__myDictLN_PixHit),G__get_linked_tagnum(&G__myDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__myDictLN_StripHit))) {
     StripHit *G__Lderived;
     G__Lderived=(StripHit*)0x1000;
     {
       GFRecoHitIfc<GFPlanarHitPolicy> *G__Lpbase=(GFRecoHitIfc<GFPlanarHitPolicy>*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__myDictLN_StripHit),G__get_linked_tagnum(&G__myDictLN_GFRecoHitIfclEGFPlanarHitPolicygR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       GFAbsRecoHit *G__Lpbase=(GFAbsRecoHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__myDictLN_StripHit),G__get_linked_tagnum(&G__myDictLN_GFAbsRecoHit),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__myDictLN_StripHit),G__get_linked_tagnum(&G__myDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__myDictLN_GenfitDisplay))) {
     GenfitDisplay *G__Lderived;
     G__Lderived=(GenfitDisplay*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__myDictLN_GenfitDisplay),G__get_linked_tagnum(&G__myDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__myDictLN_GenfitDisplay),G__get_linked_tagnum(&G__myDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablemyDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__myDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__myDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__myDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__myDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__myDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__myDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<unsigned int>",117,G__get_linked_tagnum(&G__myDictLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<unsigned int,less<unsigned int> >",117,G__get_linked_tagnum(&G__myDictLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TMatrixT<double>*>",117,G__get_linked_tagnum(&G__myDictLN_maplEstringcOTMatrixTlEdoublegRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTMatrixTlEdoublegRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TMatrixT<double>*>",117,G__get_linked_tagnum(&G__myDictLN_maplEstringcOTMatrixTlEdoublegRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTMatrixTlEdoublegRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TMatrixT<double>*,less<string> >",117,G__get_linked_tagnum(&G__myDictLN_maplEstringcOTMatrixTlEdoublegRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTMatrixTlEdoublegRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,GFDetPlane*>",117,G__get_linked_tagnum(&G__myDictLN_maplEstringcOGFDetPlanemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOGFDetPlanemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,GFDetPlane*>",117,G__get_linked_tagnum(&G__myDictLN_maplEstringcOGFDetPlanemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOGFDetPlanemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,GFDetPlane*,less<string> >",117,G__get_linked_tagnum(&G__myDictLN_maplEstringcOGFDetPlanemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOGFDetPlanemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__myDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__myDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<GFAbsRecoHit*>",117,G__get_linked_tagnum(&G__myDictLN_vectorlEGFAbsRecoHitmUcOallocatorlEGFAbsRecoHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlEGFAbsRecoHitmUcOallocatorlEGFAbsRecoHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlEGFAbsRecoHitmUcOallocatorlEGFAbsRecoHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlEGFAbsRecoHitmUcOallocatorlEGFAbsRecoHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlEGFAbsRecoHitmUcOallocatorlEGFAbsRecoHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<GFBookkeeping*>",117,G__get_linked_tagnum(&G__myDictLN_vectorlEGFBookkeepingmUcOallocatorlEGFBookkeepingmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlEGFBookkeepingmUcOallocatorlEGFBookkeepingmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlEGFBookkeepingmUcOallocatorlEGFBookkeepingmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlEGFBookkeepingmUcOallocatorlEGFBookkeepingmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlEGFBookkeepingmUcOallocatorlEGFBookkeepingmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__myDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<GFAbsRecoHit*,unsigned int>",117,G__get_linked_tagnum(&G__myDictLN_maplEGFAbsRecoHitmUcOunsignedsPintcOlesslEGFAbsRecoHitmUgRcOallocatorlEpairlEGFAbsRecoHitmUsPconstcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<GFAbsRecoHit*,unsigned int,less<GFAbsRecoHit*> >",117,G__get_linked_tagnum(&G__myDictLN_maplEGFAbsRecoHitmUcOunsignedsPintcOlesslEGFAbsRecoHitmUgRcOallocatorlEpairlEGFAbsRecoHitmUsPconstcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<int>*>",117,G__get_linked_tagnum(&G__myDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRmUcOallocatorlEvectorlEintcOallocatorlEintgRsPgRmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRmUcOallocatorlEvectorlEintcOallocatorlEintgRsPgRmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRmUcOallocatorlEvectorlEintcOallocatorlEintgRsPgRmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRmUcOallocatorlEvectorlEintcOallocatorlEintgRsPgRmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRmUcOallocatorlEvectorlEintcOallocatorlEintgRsPgRmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> >*>",117,G__get_linked_tagnum(&G__myDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRmUcOallocatorlEvectorlEintcOallocatorlEintgRsPgRmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TEveElement*,Int_t>",117,G__get_linked_tagnum(&G__myDictLN_maplETEveElementmUcOintcOlesslETEveElementmUgRcOallocatorlEpairlETEveElementmUsPconstcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TEveElement*,int>",117,G__get_linked_tagnum(&G__myDictLN_maplETEveElementmUcOintcOlesslETEveElementmUgRcOallocatorlEpairlETEveElementmUsPconstcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TEveElement*,int,less<TEveElement*> >",117,G__get_linked_tagnum(&G__myDictLN_maplETEveElementmUcOintcOlesslETEveElementmUgRcOallocatorlEpairlETEveElementmUsPconstcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<TEveProjected*>",117,G__get_linked_tagnum(&G__myDictLN_listlETEveProjectedmUcOallocatorlETEveProjectedmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TEveElement*>",117,G__get_linked_tagnum(&G__myDictLN_setlETEveElementmUcOlesslETEveElementmUgRcOallocatorlETEveElementmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TEveElement*,less<TEveElement*> >",117,G__get_linked_tagnum(&G__myDictLN_setlETEveElementmUcOlesslETEveElementmUgRcOallocatorlETEveElementmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TEveListTreeInfo>",117,G__get_linked_tagnum(&G__myDictLN_setlETEveElementcLcLTEveListTreeInfocOlesslETEveElementcLcLTEveListTreeInfogRcOallocatorlETEveElementcLcLTEveListTreeInfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TEveElement::TEveListTreeInfo>",117,G__get_linked_tagnum(&G__myDictLN_setlETEveElementcLcLTEveListTreeInfocOlesslETEveElementcLcLTEveListTreeInfogRcOallocatorlETEveElementcLcLTEveListTreeInfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo> >",117,G__get_linked_tagnum(&G__myDictLN_setlETEveElementcLcLTEveListTreeInfocOlesslETEveElementcLcLTEveListTreeInfogRcOallocatorlETEveElementcLcLTEveListTreeInfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<TEveElement*>",117,G__get_linked_tagnum(&G__myDictLN_listlETEveElementmUcOallocatorlETEveElementmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TEveVectorT<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TEveVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TEveVectorT<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TEveVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TEveVector4T<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TEveVector4TlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TEveVector4T<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TEveVector4TlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TEveVector2T<Float_t>",117,G__get_linked_tagnum(&G__myDictLN_TEveVector2TlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TEveVector2T<Double_t>",117,G__get_linked_tagnum(&G__myDictLN_TEveVector2TlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TEveVector2>",117,G__get_linked_tagnum(&G__myDictLN_vectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TEveVector2T<float> >",117,G__get_linked_tagnum(&G__myDictLN_vectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<GFTrack*>",117,G__get_linked_tagnum(&G__myDictLN_vectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<double> >",117,G__get_linked_tagnum(&G__myDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__myDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<GFTrack*>*>",117,G__get_linked_tagnum(&G__myDictLN_vectorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUcOallocatorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUcOallocatorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUcOallocatorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUcOallocatorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUcOallocatorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<GFTrack*,allocator<GFTrack*> >*>",117,G__get_linked_tagnum(&G__myDictLN_vectorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUcOallocatorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<std::vector<double> > >",117,G__get_linked_tagnum(&G__myDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__myDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__myDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > >",117,G__get_linked_tagnum(&G__myDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* PointHit */
static void G__setup_memvarPointHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__myDictLN_PointHit));
   { PointHit *p; p=(PointHit*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"NparHitRep=3LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__myDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PixHit */
static void G__setup_memvarPixHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__myDictLN_PixHit));
   { PixHit *p; p=(PixHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__myDictLN_TRandom3),-1,-2,4,"rand=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"NparHitRep=2LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__myDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StripHit */
static void G__setup_memvarStripHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__myDictLN_StripHit));
   { StripHit *p; p=(StripHit*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"NparHitRep=1LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__myDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GenfitDisplay */
static void G__setup_memvarGenfitDisplay(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__myDictLN_GenfitDisplay));
   { GenfitDisplay *p; p=(GenfitDisplay*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__myDictLN_GenfitDisplay),-1,-2,4,"eventDisplay=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fEventId=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fErrorScale=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__myDictLN_string),-1,-1,4,"fOption=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__myDictLN_vectorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUcOallocatorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUgRsPgR),G__defined_typename("vector<std::vector<GFTrack*>*>"),-1,4,"fEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__myDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<std::vector<double> > >"),-1,4,"fHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__myDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarmyDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncPointHit(void) {
   /* PointHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__myDictLN_PointHit));
   G__memfunc_setup("PointHit",815,G__myDict_277_0_1, 105, G__get_linked_tagnum(&G__myDictLN_PointHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PointHit",815,G__myDict_277_0_2, 105, G__get_linked_tagnum(&G__myDictLN_PointHit), -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 0 - point u 'TVector3' - 0 - res", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__myDictLN_GFAbsRecoHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getHMatrix",1021,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__myDictLN_TMatrixTlEdoublegR), -1, 0, 1, 1, 1, 0, "U 'GFAbsTrackRep' - 10 - stateVector", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__myDict_277_0_5, 85, G__get_linked_tagnum(&G__myDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PointHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__myDict_277_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PointHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__myDict_277_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PointHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__myDict_277_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PointHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__myDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__myDict_277_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__myDict_277_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PointHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__myDict_277_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PointHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__myDict_277_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PointHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__myDict_277_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PointHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PointHit", 815, G__myDict_277_0_17, (int) ('i'), G__get_linked_tagnum(&G__myDictLN_PointHit), -1, 0, 1, 1, 1, 0, "u 'PointHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PointHit", 941, G__myDict_277_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__myDict_277_0_19, (int) ('u'), G__get_linked_tagnum(&G__myDictLN_PointHit), -1, 1, 1, 1, 1, 0, "u 'PointHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPixHit(void) {
   /* PixHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__myDictLN_PixHit));
   G__memfunc_setup("PixHit",598,G__myDict_282_0_1, 105, G__get_linked_tagnum(&G__myDictLN_PixHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PixHit",598,G__myDict_282_0_2, 105, G__get_linked_tagnum(&G__myDictLN_PixHit), -1, 0, 3, 1, 1, 0, 
"u 'TVector3' - 0 - point d - - 0 - x_res "
"d - - 0 - y_res", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PixHit",598,G__myDict_282_0_3, 105, G__get_linked_tagnum(&G__myDictLN_PixHit), -1, 0, 2, 1, 1, 0, 
"u 'GFDetPlane' - 11 - pl d - - 0 - res", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PixHit",598,G__myDict_282_0_4, 105, G__get_linked_tagnum(&G__myDictLN_PixHit), -1, 0, 4, 1, 1, 0, 
"u 'GFDetPlane' - 11 - pl d - - 0 - res "
"d - - 0 - u d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__myDictLN_GFAbsRecoHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getHMatrix",1021,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__myDictLN_TMatrixTlEdoublegR), -1, 0, 1, 1, 1, 0, "U 'GFAbsTrackRep' - 10 - stateVector", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__myDict_282_0_7, 85, G__get_linked_tagnum(&G__myDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PixHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__myDict_282_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PixHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__myDict_282_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PixHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__myDict_282_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PixHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__myDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__myDict_282_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__myDict_282_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PixHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__myDict_282_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PixHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__myDict_282_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PixHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__myDict_282_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PixHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PixHit", 598, G__myDict_282_0_19, (int) ('i'), G__get_linked_tagnum(&G__myDictLN_PixHit), -1, 0, 1, 1, 1, 0, "u 'PixHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PixHit", 724, G__myDict_282_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__myDict_282_0_21, (int) ('u'), G__get_linked_tagnum(&G__myDictLN_PixHit), -1, 1, 1, 1, 1, 0, "u 'PixHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStripHit(void) {
   /* StripHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__myDictLN_StripHit));
   G__memfunc_setup("StripHit",823,G__myDict_283_0_1, 105, G__get_linked_tagnum(&G__myDictLN_StripHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StripHit",823,G__myDict_283_0_2, 105, G__get_linked_tagnum(&G__myDictLN_StripHit), -1, 0, 3, 1, 1, 0, 
"u 'TVector3' - 0 - point d - - 0 - res "
"i - - 0 - proj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__myDictLN_GFAbsRecoHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getHMatrix",1021,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__myDictLN_TMatrixTlEdoublegR), -1, 0, 1, 1, 1, 0, "U 'GFAbsTrackRep' - 10 - stateVector", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__myDict_283_0_5, 85, G__get_linked_tagnum(&G__myDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StripHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__myDict_283_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StripHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__myDict_283_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StripHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__myDict_283_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StripHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__myDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__myDict_283_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__myDict_283_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StripHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__myDict_283_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StripHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__myDict_283_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StripHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__myDict_283_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StripHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StripHit", 823, G__myDict_283_0_17, (int) ('i'), G__get_linked_tagnum(&G__myDictLN_StripHit), -1, 0, 1, 1, 1, 0, "u 'StripHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StripHit", 949, G__myDict_283_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__myDict_283_0_19, (int) ('u'), G__get_linked_tagnum(&G__myDictLN_StripHit), -1, 1, 1, 1, 1, 0, "u 'StripHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGenfitDisplay(void) {
   /* GenfitDisplay */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__myDictLN_GenfitDisplay));
   G__memfunc_setup("GenfitDisplay",1331,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__myDictLN_GenfitDisplay), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInstance",1141,G__myDict_741_0_2, 85, G__get_linked_tagnum(&G__myDictLN_GenfitDisplay), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (GenfitDisplay* (*)())(&GenfitDisplay::getInstance) ), 0);
   G__memfunc_setup("reset",547,G__myDict_741_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addEvent",811,G__myDict_741_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<GFTrack*,allocator<GFTrack*> >' 'vector<GFTrack*>' 1 - tr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("next",447,G__myDict_741_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 '1' stp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("prev",445,G__myDict_741_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 '1' stp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("gotoEvent",955,G__myDict_741_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNEvents",1027,G__myDict_741_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOptions",1080,G__myDict_741_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 '\"ADHT\"' opts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setErrScale",1117,G__myDict_741_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 '1.' errScale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getErrScale",1105,G__myDict_741_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("open",434,G__myDict_741_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addHits",705,G__myDict_741_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >' 'vector<std::vector<double> >' 0 - hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeGui",707,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("drawEvent",944,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "h - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("boxCreator",1049,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__myDictLN_TEveBox), -1, 0, 6, 1, 4, 0, 
"u 'TVector3' - 0 - o u 'TVector3' - 0 - u "
"u 'TVector3' - 0 - v f - - 0 - ud "
"f - - 0 - vd f - - 0 - depth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__myDict_741_0_17, 85, G__get_linked_tagnum(&G__myDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GenfitDisplay::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__myDict_741_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GenfitDisplay::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__myDict_741_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GenfitDisplay::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__myDict_741_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GenfitDisplay::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__myDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__myDict_741_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__myDict_741_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GenfitDisplay::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__myDict_741_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GenfitDisplay::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__myDict_741_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GenfitDisplay::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__myDict_741_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GenfitDisplay::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GenfitDisplay", 1331, G__myDict_741_0_29, (int) ('i'), G__get_linked_tagnum(&G__myDictLN_GenfitDisplay), -1, 0, 1, 1, 1, 0, "u 'GenfitDisplay' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GenfitDisplay", 1457, G__myDict_741_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__myDict_741_0_31, (int) ('u'), G__get_linked_tagnum(&G__myDictLN_GenfitDisplay), -1, 1, 1, 1, 1, 0, "u 'GenfitDisplay' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncmyDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalmyDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcmyDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__myDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__myDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__myDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__myDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__myDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__myDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__myDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__myDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__myDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__myDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__myDictLN_GFDetPlane = { "GFDetPlane" , 99 , -1 };
G__linked_taginfo G__myDictLN_GFAbsRecoHit = { "GFAbsRecoHit" , 99 , -1 };
G__linked_taginfo G__myDictLN_GFAbsTrackRep = { "GFAbsTrackRep" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_GFRecoHitIfclEGFSpacepointHitPolicygR = { "GFRecoHitIfc<GFSpacepointHitPolicy>" , 99 , -1 };
G__linked_taginfo G__myDictLN_PointHit = { "PointHit" , 99 , -1 };
G__linked_taginfo G__myDictLN_TRandom3 = { "TRandom3" , 99 , -1 };
G__linked_taginfo G__myDictLN_GFRecoHitIfclEGFPlanarHitPolicygR = { "GFRecoHitIfc<GFPlanarHitPolicy>" , 99 , -1 };
G__linked_taginfo G__myDictLN_PixHit = { "PixHit" , 99 , -1 };
G__linked_taginfo G__myDictLN_StripHit = { "StripHit" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR = { "set<unsigned int,less<unsigned int>,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__myDictLN_maplEstringcOTMatrixTlEdoublegRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTMatrixTlEdoublegRmUgRsPgRsPgR = { "map<string,TMatrixT<double>*,less<string>,allocator<pair<const string,TMatrixT<double>*> > >" , 99 , -1 };
G__linked_taginfo G__myDictLN_maplEstringcOGFDetPlanemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOGFDetPlanemUgRsPgRsPgR = { "map<string,GFDetPlane*,less<string>,allocator<pair<const string,GFDetPlane*> > >" , 99 , -1 };
G__linked_taginfo G__myDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__myDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__myDictLN_vectorlEGFAbsRecoHitmUcOallocatorlEGFAbsRecoHitmUgRsPgR = { "vector<GFAbsRecoHit*,allocator<GFAbsRecoHit*> >" , 99 , -1 };
G__linked_taginfo G__myDictLN_reverse_iteratorlEvectorlEGFAbsRecoHitmUcOallocatorlEGFAbsRecoHitmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<GFAbsRecoHit*,allocator<GFAbsRecoHit*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__myDictLN_vectorlEGFBookkeepingmUcOallocatorlEGFBookkeepingmUgRsPgR = { "vector<GFBookkeeping*,allocator<GFBookkeeping*> >" , 99 , -1 };
G__linked_taginfo G__myDictLN_reverse_iteratorlEvectorlEGFBookkeepingmUcOallocatorlEGFBookkeepingmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<GFBookkeeping*,allocator<GFBookkeeping*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__myDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__myDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__myDictLN_maplEGFAbsRecoHitmUcOunsignedsPintcOlesslEGFAbsRecoHitmUgRcOallocatorlEpairlEGFAbsRecoHitmUsPconstcOunsignedsPintgRsPgRsPgR = { "map<GFAbsRecoHit*,unsigned int,less<GFAbsRecoHit*>,allocator<pair<GFAbsRecoHit* const,unsigned int> > >" , 99 , -1 };
G__linked_taginfo G__myDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRmUcOallocatorlEvectorlEintcOallocatorlEintgRsPgRmUgRsPgR = { "vector<vector<int,allocator<int> >*,allocator<vector<int,allocator<int> >*> >" , 99 , -1 };
G__linked_taginfo G__myDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRmUcOallocatorlEvectorlEintcOallocatorlEintgRsPgRmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >*,allocator<vector<int,allocator<int> >*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__myDictLN_maplETEveElementmUcOintcOlesslETEveElementmUgRcOallocatorlEpairlETEveElementmUsPconstcOintgRsPgRsPgR = { "map<TEveElement*,int,less<TEveElement*>,allocator<pair<TEveElement* const,int> > >" , 99 , -1 };
G__linked_taginfo G__myDictLN_listlETEveProjectedmUcOallocatorlETEveProjectedmUgRsPgR = { "list<TEveProjected*,allocator<TEveProjected*> >" , 99 , -1 };
G__linked_taginfo G__myDictLN_setlETEveElementmUcOlesslETEveElementmUgRcOallocatorlETEveElementmUgRsPgR = { "set<TEveElement*,less<TEveElement*>,allocator<TEveElement*> >" , 99 , -1 };
G__linked_taginfo G__myDictLN_setlETEveElementcLcLTEveListTreeInfocOlesslETEveElementcLcLTEveListTreeInfogRcOallocatorlETEveElementcLcLTEveListTreeInfogRsPgR = { "set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >" , 99 , -1 };
G__linked_taginfo G__myDictLN_listlETEveElementmUcOallocatorlETEveElementmUgRsPgR = { "list<TEveElement*,allocator<TEveElement*> >" , 99 , -1 };
G__linked_taginfo G__myDictLN_TEveVectorTlEfloatgR = { "TEveVectorT<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TEveVectorTlEdoublegR = { "TEveVectorT<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TEveVector4TlEfloatgR = { "TEveVector4T<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TEveVector4TlEdoublegR = { "TEveVector4T<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TEveVector2TlEfloatgR = { "TEveVector2T<float>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TEveVector2TlEdoublegR = { "TEveVector2T<double>" , 99 , -1 };
G__linked_taginfo G__myDictLN_vectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgR = { "vector<TEveVector2T<float>,allocator<TEveVector2T<float> > >" , 99 , -1 };
G__linked_taginfo G__myDictLN_reverse_iteratorlEvectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TEveVector2T<float>,allocator<TEveVector2T<float> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__myDictLN_TEveBox = { "TEveBox" , 99 , -1 };
G__linked_taginfo G__myDictLN_GenfitDisplay = { "GenfitDisplay" , 99 , -1 };
G__linked_taginfo G__myDictLN_vectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgR = { "vector<GFTrack*,allocator<GFTrack*> >" , 99 , -1 };
G__linked_taginfo G__myDictLN_reverse_iteratorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<GFTrack*,allocator<GFTrack*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__myDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__myDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__myDictLN_vectorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUcOallocatorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUgRsPgR = { "vector<vector<GFTrack*,allocator<GFTrack*> >*,allocator<vector<GFTrack*,allocator<GFTrack*> >*> >" , 99 , -1 };
G__linked_taginfo G__myDictLN_reverse_iteratorlEvectorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUcOallocatorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<GFTrack*,allocator<GFTrack*> >*,allocator<vector<GFTrack*,allocator<GFTrack*> >*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__myDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR = { "vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >" , 99 , -1 };
G__linked_taginfo G__myDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablemyDict() {
  G__myDictLN_TClass.tagnum = -1 ;
  G__myDictLN_TBuffer.tagnum = -1 ;
  G__myDictLN_TMemberInspector.tagnum = -1 ;
  G__myDictLN_TObject.tagnum = -1 ;
  G__myDictLN_TNamed.tagnum = -1 ;
  G__myDictLN_string.tagnum = -1 ;
  G__myDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__myDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__myDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__myDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__myDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__myDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__myDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__myDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__myDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__myDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__myDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__myDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__myDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__myDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__myDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__myDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__myDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__myDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__myDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__myDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__myDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__myDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__myDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__myDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__myDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__myDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__myDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__myDictLN_TVector3.tagnum = -1 ;
  G__myDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__myDictLN_GFDetPlane.tagnum = -1 ;
  G__myDictLN_GFAbsRecoHit.tagnum = -1 ;
  G__myDictLN_GFAbsTrackRep.tagnum = -1 ;
  G__myDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__myDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__myDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__myDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__myDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__myDictLN_GFRecoHitIfclEGFSpacepointHitPolicygR.tagnum = -1 ;
  G__myDictLN_PointHit.tagnum = -1 ;
  G__myDictLN_TRandom3.tagnum = -1 ;
  G__myDictLN_GFRecoHitIfclEGFPlanarHitPolicygR.tagnum = -1 ;
  G__myDictLN_PixHit.tagnum = -1 ;
  G__myDictLN_StripHit.tagnum = -1 ;
  G__myDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__myDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__myDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__myDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__myDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__myDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__myDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__myDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__myDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__myDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__myDictLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__myDictLN_maplEstringcOTMatrixTlEdoublegRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTMatrixTlEdoublegRmUgRsPgRsPgR.tagnum = -1 ;
  G__myDictLN_maplEstringcOGFDetPlanemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOGFDetPlanemUgRsPgRsPgR.tagnum = -1 ;
  G__myDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__myDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__myDictLN_vectorlEGFAbsRecoHitmUcOallocatorlEGFAbsRecoHitmUgRsPgR.tagnum = -1 ;
  G__myDictLN_reverse_iteratorlEvectorlEGFAbsRecoHitmUcOallocatorlEGFAbsRecoHitmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__myDictLN_vectorlEGFBookkeepingmUcOallocatorlEGFBookkeepingmUgRsPgR.tagnum = -1 ;
  G__myDictLN_reverse_iteratorlEvectorlEGFBookkeepingmUcOallocatorlEGFBookkeepingmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__myDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__myDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__myDictLN_maplEGFAbsRecoHitmUcOunsignedsPintcOlesslEGFAbsRecoHitmUgRcOallocatorlEpairlEGFAbsRecoHitmUsPconstcOunsignedsPintgRsPgRsPgR.tagnum = -1 ;
  G__myDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRmUcOallocatorlEvectorlEintcOallocatorlEintgRsPgRmUgRsPgR.tagnum = -1 ;
  G__myDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRmUcOallocatorlEvectorlEintcOallocatorlEintgRsPgRmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__myDictLN_maplETEveElementmUcOintcOlesslETEveElementmUgRcOallocatorlEpairlETEveElementmUsPconstcOintgRsPgRsPgR.tagnum = -1 ;
  G__myDictLN_listlETEveProjectedmUcOallocatorlETEveProjectedmUgRsPgR.tagnum = -1 ;
  G__myDictLN_setlETEveElementmUcOlesslETEveElementmUgRcOallocatorlETEveElementmUgRsPgR.tagnum = -1 ;
  G__myDictLN_setlETEveElementcLcLTEveListTreeInfocOlesslETEveElementcLcLTEveListTreeInfogRcOallocatorlETEveElementcLcLTEveListTreeInfogRsPgR.tagnum = -1 ;
  G__myDictLN_listlETEveElementmUcOallocatorlETEveElementmUgRsPgR.tagnum = -1 ;
  G__myDictLN_TEveVectorTlEfloatgR.tagnum = -1 ;
  G__myDictLN_TEveVectorTlEdoublegR.tagnum = -1 ;
  G__myDictLN_TEveVector4TlEfloatgR.tagnum = -1 ;
  G__myDictLN_TEveVector4TlEdoublegR.tagnum = -1 ;
  G__myDictLN_TEveVector2TlEfloatgR.tagnum = -1 ;
  G__myDictLN_TEveVector2TlEdoublegR.tagnum = -1 ;
  G__myDictLN_vectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgR.tagnum = -1 ;
  G__myDictLN_reverse_iteratorlEvectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__myDictLN_TEveBox.tagnum = -1 ;
  G__myDictLN_GenfitDisplay.tagnum = -1 ;
  G__myDictLN_vectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgR.tagnum = -1 ;
  G__myDictLN_reverse_iteratorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__myDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__myDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__myDictLN_vectorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUcOallocatorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUgRsPgR.tagnum = -1 ;
  G__myDictLN_reverse_iteratorlEvectorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUcOallocatorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__myDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__myDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablemyDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__myDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__myDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__myDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__myDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__myDictLN_string);
   G__get_linked_tagnum_fwd(&G__myDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__myDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_GFDetPlane);
   G__get_linked_tagnum_fwd(&G__myDictLN_GFAbsRecoHit);
   G__get_linked_tagnum_fwd(&G__myDictLN_GFAbsTrackRep);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_GFRecoHitIfclEGFSpacepointHitPolicygR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__myDictLN_PointHit),sizeof(PointHit),-1,324864,(char*)NULL,G__setup_memvarPointHit,G__setup_memfuncPointHit);
   G__get_linked_tagnum_fwd(&G__myDictLN_TRandom3);
   G__get_linked_tagnum_fwd(&G__myDictLN_GFRecoHitIfclEGFPlanarHitPolicygR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__myDictLN_PixHit),sizeof(PixHit),-1,324864,(char*)NULL,G__setup_memvarPixHit,G__setup_memfuncPixHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__myDictLN_StripHit),sizeof(StripHit),-1,324864,(char*)NULL,G__setup_memvarStripHit,G__setup_memfuncStripHit);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_maplEstringcOTMatrixTlEdoublegRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTMatrixTlEdoublegRmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_maplEstringcOGFDetPlanemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOGFDetPlanemUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_vectorlEGFAbsRecoHitmUcOallocatorlEGFAbsRecoHitmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_reverse_iteratorlEvectorlEGFAbsRecoHitmUcOallocatorlEGFAbsRecoHitmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_vectorlEGFBookkeepingmUcOallocatorlEGFBookkeepingmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_reverse_iteratorlEvectorlEGFBookkeepingmUcOallocatorlEGFBookkeepingmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_maplEGFAbsRecoHitmUcOunsignedsPintcOlesslEGFAbsRecoHitmUgRcOallocatorlEpairlEGFAbsRecoHitmUsPconstcOunsignedsPintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRmUcOallocatorlEvectorlEintcOallocatorlEintgRsPgRmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRmUcOallocatorlEvectorlEintcOallocatorlEintgRsPgRmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_maplETEveElementmUcOintcOlesslETEveElementmUgRcOallocatorlEpairlETEveElementmUsPconstcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_listlETEveProjectedmUcOallocatorlETEveProjectedmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_setlETEveElementmUcOlesslETEveElementmUgRcOallocatorlETEveElementmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_setlETEveElementcLcLTEveListTreeInfocOlesslETEveElementcLcLTEveListTreeInfogRcOallocatorlETEveElementcLcLTEveListTreeInfogRsPgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_listlETEveElementmUcOallocatorlETEveElementmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TEveVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TEveVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TEveVector4TlEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TEveVector4TlEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TEveVector2TlEfloatgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TEveVector2TlEdoublegR);
   G__get_linked_tagnum_fwd(&G__myDictLN_vectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_reverse_iteratorlEvectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_TEveBox);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__myDictLN_GenfitDisplay),sizeof(GenfitDisplay),-1,324864,(char*)NULL,G__setup_memvarGenfitDisplay,G__setup_memfuncGenfitDisplay);
   G__get_linked_tagnum_fwd(&G__myDictLN_vectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_reverse_iteratorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_vectorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUcOallocatorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_reverse_iteratorlEvectorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUcOallocatorlEvectorlEGFTrackmUcOallocatorlEGFTrackmUgRsPgRmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__myDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupmyDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupmyDict()");
  G__set_cpp_environmentmyDict();
  G__cpp_setup_tagtablemyDict();

  G__cpp_setup_inheritancemyDict();

  G__cpp_setup_typetablemyDict();

  G__cpp_setup_memvarmyDict();

  G__cpp_setup_memfuncmyDict();
  G__cpp_setup_globalmyDict();
  G__cpp_setup_funcmyDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncmyDict();
  return;
}
class G__cpp_setup_initmyDict {
  public:
    G__cpp_setup_initmyDict() { G__add_setup_func("myDict",(G__incsetup)(&G__cpp_setupmyDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initmyDict() { G__remove_setup_func("myDict"); }
};
G__cpp_setup_initmyDict G__cpp_setup_initializermyDict;

