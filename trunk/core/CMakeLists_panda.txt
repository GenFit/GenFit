# Create a library called "libgenfit" which includes the source files given in
# the array .
# The extension is already found.  Any number of sources could be listed here.

set(INCLUDE_DIRECTORIES
${ROOT_INCLUDE_DIR} 
${CLHEP_INCLUDE_DIR}
${CMAKE_SOURCE_DIR}/genfit
${CMAKE_SOURCE_DIR}/genfit/test
)

include_directories( ${INCLUDE_DIRECTORIES})

set(LINK_DIRECTORIES
${ROOT_LIBRARY_DIR}
)

link_directories( ${LINK_DIRECTORIES})

set(GENFIT_SRCS GFAbsRecoHit.cxx GFAbsTrackRep.cxx GFBookkeeping.cxx
GFDetPlane.cxx GFException.cxx GFKalman.cxx GFPlanarHitPolicy.cxx GFPseudoSpacepointWireHitPolicy.cxx
GFRecoHitFactory.cxx GFRecoHitProducer.cxx GFSpacepointHitPolicy.cxx
GFTools.cxx GFTrackCand.cxx GFTrack.cxx GFWireHitPolicy.cxx
GFWirepointHitPolicy.cxx GFConstField.cxx GFFieldManager.cxx
GFAbsFinitePlane.cxx GFRectFinitePlane.cxx 
GFDaf.cxx GFDafHit.cxx
GFMaterialEffects.cxx GFTrackProximity.cxx)

if(RULE_CHECKER_FOUND)
  CHECK_RULES("${GENFIT_SRCS}" "${INCLUDE_DIRECTORIES}" GENFIT_RULES)
endif(RULE_CHECKER_FOUND)

# fill list of header files from list of source files
# by exchanging the file extension
CHANGE_FILE_EXTENSION(*.cxx *.h GENFIT_HEADERS "${GENFIT_SRCS}")

set(GENFIT_LINKDEF  genfitLinkDef.h)
set(GENFIT_DICTIONARY ${CMAKE_CURRENT_BINARY_DIR}/genfitDict.cxx) 

SET(GENFIT_HEADERS GFRecoHitIfc.h ${GENFIT_HEADERS})

ROOT_GENERATE_DICTIONARY("${GENFIT_HEADERS}" "${GENFIT_LINKDEF}" "${GENFIT_DICTIONARY}" "${INCLUDE_DIRECTORIES}")

SET(GENFIT_SRCS ${GENFIT_SRCS} ${GENFIT_DICTIONARY})

add_library(genfit SHARED ${GENFIT_SRCS})
target_link_libraries(genfit ${ROOT_LIBRARIES})
set_target_properties(genfit PROPERTIES ${FAIRROOT_LIBRARY_PROPERTIES})
################ install ###################
install(TARGETS genfit DESTINATION ${CMAKE_BINARY_DIR}/lib)
