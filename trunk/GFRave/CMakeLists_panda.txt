# Create a library called "libgfrave" which includes the source files given in
# the array .
# The extension is already found.  Any number of sources could be listed here.

cmake_minimum_required(VERSION 2.6)

#check for ENV variables that are needed
IF(NOT DEFINED ENV{ROOTSYS})
   MESSAGE(FATAL_ERROR "You did not set the environment variable ROOTSYS. Please check your ROOT configuration.") 
ENDIF(NOT DEFINED ENV{ROOTSYS})

IF(NOT DEFINED ENV{RAVEPATH})
   MESSAGE(FATAL_ERROR "RAVEPATH is not set!") 
ENDIF(NOT DEFINED ENV{RAVEPATH})  
SET(RAVEPATH $ENV{RAVEPATH})


# get compiler flags from rave
INCLUDE(UsePkgConfig)
SET(ENV{PKG_CONFIG_PATH} ${RAVEPATH})
PKGCONFIG(rave 
  RAVE_INCLUDE_DIR 
  RAVE_LINK_DIR 
  RAVE_LINK_FLAGS 
  CMAKE_CXX_FLAGS
)

set (INCLUDE_DIRECTORIES
  $ENV{ROOTSYS}/include  
  ${CMAKE_SOURCE_DIR}/genfit
  ${CMAKE_SOURCE_DIR}/GenfitTools/GFRave
  ${CLHEP_INCLUDE_DIR}
  ${RAVE_INCLUDE_DIR}
)
include_directories( ${INCLUDE_DIRECTORIES})

set(LINK_DIRECTORIES
	${ROOT_LIBRARY_DIR}
	$ENV{RAVELIBPATH}
)
link_directories( ${LINK_DIRECTORIES})


set(GFRAVE_SRCS 
	GFRaveConverters.cxx  
	GFRaveMagneticField.cxx  
	GFRavePropagator.cxx  
	GFRaveTrackParameters.cxx
	GFRaveVertex.cxx
	GFRaveVertexFactory.cxx
)

set(GFRAVEDICT_HEADERS 
	GFRaveTrackParameters.h
	GFRaveVertex.h
)

if(RULE_CHECKER_FOUND)
    CHECK_RULES("${GFRAVE_SRCS}" "${INCLUDE_DIRECTORIES}" GFRAVE_RULES)
endif(RULE_CHECKER_FOUND)

# fill list of header files from list of source files
# by exchanging the file extension
CHANGE_FILE_EXTENSION(*.cxx *.h GFRAVE_HEADERS "${GFRAVE_SRCS}")

set(GFRAVE_LINKDEF  GFRaveLinkDef.h)
set(GFRAVE_DICTIONARY ${CMAKE_CURRENT_BINARY_DIR}/GFRaveDict.cxx) 
ROOT_GENERATE_DICTIONARY("${GFRAVEDICT_HEADERS}" "${GFRAVE_LINKDEF}" "${GFRAVE_DICTIONARY}" "${INCLUDE_DIRECTORIES}")

SET(GFRAVE_SRCS_ALL ${GFRAVE_SRCS} ${GFRAVE_DICTIONARY})

add_library(gfrave SHARED ${GFRAVE_SRCS_ALL})
target_link_libraries(gfrave 
	${ROOT_LIBRARIES}
    ${RAVE_LINK_FLAGS}
    -I${RAVE_INCLUDE_DIR}
)
set_target_properties(gfrave PROPERTIES ${FAIRROOT_LIBRARY_PROPERTIES})
################ install ###################
install(TARGETS gfrave DESTINATION ${CMAKE_BINARY_DIR}/lib)

