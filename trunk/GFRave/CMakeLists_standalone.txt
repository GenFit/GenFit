# Create a library called "libgfrave" which includes the source files given in
# the array .
# The extension is already found.  Any number of sources could be listed here.

cmake_minimum_required(VERSION 2.6)

IF(NOT DEFINED ENV{RAVEPATH})
   MESSAGE(FATAL_ERROR "You did not define the environment variable RAVEPATH which is nedded to find rave. GFRave will not be built.") 
ENDIF(NOT DEFINED ENV{RAVEPATH})
SET(RAVEPATH $ENV{RAVEPATH})

#check for ENV variables that are needed
IF(NOT DEFINED ENV{ROOTSYS})
   MESSAGE(FATAL_ERROR "You did not set the environment variable ROOTSYS. Please check your ROOT configuration.") 
ENDIF(NOT DEFINED ENV{ROOTSYS})


# get compiler flags from rave
INCLUDE(UsePkgConfig)
SET(ENV{PKG_CONFIG_PATH} ${RAVEPATH})
PKGCONFIG(rave 
  RAVE_INCLUDE_DIR 
  RAVE_LINK_DIR 
  RAVE_LINK_FLAGS 
  CMAKE_CXX_FLAGS
)

INCLUDE_DIRECTORIES(
  $ENV{ROOTSYS}/include  
  ${GENFIT}/core 
  ${GENFIT}/GFRave
  ${CLHEP_INCLUDE_DIR}
  ${RAVE_INCLUDE_DIR}
)

set(GFRAVE_SRCS 
  GFRaveVertexFactory.cxx
  GFRaveTrackParameters.cxx
  GFRaveVertex.cxx
  GFRaveConverters.cxx
  GFRavePropagator.cxx
  GFRaveMagneticField.cxx
)

set(GFRAVE_HEADERS
  GFRaveVertexFactory.h
  GFRaveTrackParameters.h
  GFRaveVertex.h
  GFRaveConverters.h
  GFRavePropagator.h
  GFRaveMagneticField.h
)


set(GFRAVE_LINKDEF  GFRaveLinkDef.h)
set(GFRAVE_DICTIONARY GFRaveDict.cxx) 

FIND_PROGRAM(ROOT_CINT_EXECUTABLE
	NAMES rootcint
	PATHS $ENV{ROOTSYS}/bin
	NO_DEFAULT_PATH)


ADD_CUSTOM_COMMAND(OUTPUT ${CMAKE_BINARY_DIR}/${GFRAVE_DICTIONARY}
	COMMAND ${ROOT_CINT_EXECUTABLE}
      	ARGS -f ${CMAKE_BINARY_DIR}/${GFRAVE_DICTIONARY} -c 
      	-I$ENV{ROOTSYS}/include
      	-I${GENFIT}/core 
       	GFRaveTrackParameters.h
        GFRaveVertex.h 
        ${GFRAVE_LINKDEF}
      	DEPENDS ${GFRAVE_HEADERS} ${GFRAVE_LINKDEF})
      
message("${ROOT_CINT_EXECUTABLE}") 
message("${CMAKE_BINARY_DIR}/${GFRAVE_DICTIONARY}") 

SET(GFRAVE_SRCS_ALL ${GFRAVE_SRCS} ${CMAKE_BINARY_DIR}/${GFRAVE_DICTIONARY})
#SET(GFRAVE_SRCS_ALL ${GFRAVE_SRCS})

################ install ###################

#add ROOT lib
Execute_process(COMMAND root-config --glibs --cflags
	OUTPUT_VARIABLE ROOT_LIBS
    	OUTPUT_STRIP_TRAILING_WHITESPACE)

add_library(gfrave SHARED ${GFRAVE_SRCS_ALL})
target_link_libraries(gfrave 
  ${ROOT_LIBS}  
  ${RAVE_LINK_FLAGS}
  -I${RAVE_INCLUDE_DIR}
)

install(TARGETS gfrave DESTINATION ${GENFITLIBINSTALLDIR})

