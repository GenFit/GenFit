# Create a library called "libgfrave" which includes the source files given in
# the array .
# The extension is already found.  Any number of sources could be listed here.

cmake_minimum_required(VERSION 2.8)

IF(NOT DEFINED ENV{RAVEPATH})
   MESSAGE(FATAL_ERROR "You did not define the environment variable RAVEPATH which is needed to find rave. GFRave will not be built.") 
ENDIF(NOT DEFINED ENV{RAVEPATH})
SET(RAVEPATH $ENV{RAVEPATH})

#check for ENV variables that are needed
IF(NOT DEFINED ENV{ROOTSYS})
   MESSAGE(FATAL_ERROR "You did not set the environment variable ROOTSYS. Please check your ROOT configuration.") 
ENDIF(NOT DEFINED ENV{ROOTSYS})


# get compiler flags from rave
INCLUDE(FindPkgConfig)
SET(ENV{PKG_CONFIG_PATH} ${RAVEPATH})
pkg_search_module(RAVE rave REQUIRED)

# turn comma separated lists into space separated strings
string (REPLACE ";" " " RAVE_LDFLAGS_STR "${RAVE_LDFLAGS}")
string (REPLACE ";" " " RAVE_INCLUDE_DIRS_STR "${RAVE_INCLUDE_DIRS}")
string (REPLACE ";" " " RAVE_CFLAGS_STR "${RAVE_CFLAGS}")

SET (CMAKE_CXX_FLAGS ${RAVE_CFLAGS_STR})


INCLUDE_DIRECTORIES(
  $ENV{ROOTSYS}/include  
  ${GENFIT}/core 
  ${GENFIT}/GFRave
  ${CLHEP_INCLUDE_DIR}
  ${RAVE_INCLUDE_DIRS_STR}
)

set(GFRAVE_SRCS 
	GFRaveConverters.cxx  
	GFRaveMagneticField.cxx  
	GFRavePropagator.cxx  
	GFRaveTrackParameters.cxx
	GFRaveVertex.cxx
	GFRaveVertexFactory.cxx
)

set(GFRAVEDICT_HEADERS 
	GFRaveTrackParameters.h
	GFRaveVertex.h
)

string (REPLACE ".cxx" ".h" GFRAVE_HEADERS "${GFRAVE_SRCS}")


set(GFRAVE_LINKDEF  GFRaveLinkDef.h)
set(GFRAVE_DICTIONARY GFRaveDict.cxx) 

FIND_PROGRAM(ROOT_CINT_EXECUTABLE
	NAMES rootcint
	PATHS $ENV{ROOTSYS}/bin
	NO_DEFAULT_PATH)


ADD_CUSTOM_COMMAND(OUTPUT ${CMAKE_BINARY_DIR}/${GFRAVE_DICTIONARY}
	COMMAND ${ROOT_CINT_EXECUTABLE}
      	ARGS -f ${CMAKE_BINARY_DIR}/${GFRAVE_DICTIONARY} -c 
      	-I$ENV{ROOTSYS}/include
      	-I${GENFIT}/core 
       	${GFRAVEDICT_HEADERS}
        ${GFRAVE_LINKDEF}
      	DEPENDS ${GFRAVE_HEADERS} ${GFRAVE_LINKDEF})
      
SET(GFRAVE_SRCS_ALL ${GFRAVE_SRCS} ${CMAKE_BINARY_DIR}/${GFRAVE_DICTIONARY})

################ install ###################

#add ROOT lib
Execute_process(COMMAND root-config --glibs --cflags
	OUTPUT_VARIABLE ROOT_LIBS
    	OUTPUT_STRIP_TRAILING_WHITESPACE)
    	
string (REPLACE " " " -I" RAVE_INCLUDE_DIRS_I "${RAVE_INCLUDE_DIRS_STR}")    	

add_library(gfrave SHARED ${GFRAVE_SRCS_ALL})
target_link_libraries(gfrave 
  ${ROOT_LIBS}  
  ${RAVE_LDFLAGS_STR}
  -I${RAVE_INCLUDE_DIRS_I}
)

install(TARGETS gfrave DESTINATION ${GENFITLIBINSTALLDIR})

